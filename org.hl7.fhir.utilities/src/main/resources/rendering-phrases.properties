# Rendering
BUNDLE_HEADER_ROOT = Bundle {0} of type {1}
BUNDLE_HEADER_ENTRY = Entry {0}
BUNDLE_HEADER_ENTRY_URL = Entry {0} - fullUrl = {1}
BUNDLE_RESOURCE = Resource {0}:
BUNDLE_SEARCH = Search:
BUNDLE_SEARCH_MODE = Mode = {0}
BUNDLE_SEARCH_SCORE = Score = {0}
BUNDLE_RESPONSE = Response:
BUNDLE_LOCATION = Location = {0}
BUNDLE_ETAG = ETag = {0}
BUNDLE_LAST_MOD = LastModified = {0}
BUNDLE_REQUEST = Request:
BUNDLE_IF_NON_MATCH = If-None-Match = {0}
BUNDLE_IF_MOD = If-Modified-Since = {0}
BUNDLE_IF_MATCH = If-Match = {0}
BUNDLE_IF_NONE = If-None-Exist = {0}
CODEPROP_CODE = Code
CODESYSTEM_PROPS = Properties
CODESYSTEM_CONCEPTS = Concepts
CODESYSTEM_DEPRECATED = Deprecated
CODESYSTEM_DESC = Description
CODESYSTEM_FILTERS = Filters
CODESYSTEM_FILTER_CODE = Code
CODESYSTEM_FILTER_OP = Op
CODESYSTEM_FILTER_VALUE = Value
CODESYSTEM_PROP_CODE = Code
CODESYSTEM_PROP_NAME = Name
CODESYSTEM_PROP_URI = URI
CODESYSTEM_PROP_DESC = Description
CODESYSTEM_PROP_TYPE = Type
CODESYSTEM_PROPS_DESC = This code system defines the following properties for its concepts
CODESYSTEM_CONTENT_COMPLETE This <param name="cased"/> code system <param name="cs"/> defines the following code<if test="code-count != 1">s</if><param name="h"/>:
CODESYSTEM_CONTENT_EXAMPLE = This <param name="cased"/> code system <param name="cs"/> provides some code<if test="code-count != 1">s</if><param name="h"/> <b>that are example only</b>:
CODESYSTEM_CONTENT_FRAGMENT =  This <param name="cased"/> code system <param name="cs"/> provides <b>a fragment</b> that includes following code<if test="code-count != 1">s</if><param name="h"/>:
CODESYSTEM_CONTENT_NOTPRESENT = This <param name="cased"/> code system <param name="cs"/> defines codes<param name="h"/>, but no codes are represented here
CODESYSTEM_CONTENT_SUPPLEMENT = This code system <param name="cs"/> defines {0} on the following code<if test="code-count != 1">s</if>:
RESOURCE_COPYRIGHT = Copyright Statement:
SD_COMP_HEAD_CARD_L = L Card.
SD_COMP_HEAD_CARD_L_DESC  = Minimum and Maximum # of times the the element can appear in the instance - Left Structure
SD_COMP_HEAD_CARD_R = R Card.
SD_COMP_HEAD_CARD_R_DESC  = Minimum and Maximum # of times the the element can appear in the instance - Right Structure
SD_COMP_HEAD_COMP = Comments
SD_COMP_HEAD_COMP_DESC = Comments about the comparison
SD_COMP_HEAD_DESC_L = L Description & Constraints
SD_COMP_HEAD_DESC_L_DESC  = Additional information about the element - Left Structure
SD_COMP_HEAD_DESC_R = R Description & Constraints
SD_COMP_HEAD_DESC_R_DESC  = Additional information about the element - Right Structure
SD_COMP_HEAD_FLAGS_L = L Flags
SD_COMP_HEAD_FLAGS_L_DESC  = Information about the use of the element - Left Structure
SD_COMP_HEAD_FLAGS_R = R Flags
SD_COMP_HEAD_FLAGS_R_DESC  = Information about the use of the element - Right Structure
SD_COMP_HEAD_NAME = Name
SD_COMP_HEAD_NAME_DESC = The logical name of the element
SD_COMP_HEAD_TYPE_L = L Type
SD_COMP_HEAD_TYPE_L_DESC  = Reference to the type of the element - Left Structure
SD_COMP_HEAD_TYPE_R = R Type
SD_COMP_HEAD_TYPE_R_DESC  = Reference to the type of the element - Right Structure
SD_DOCO = Documentation for this format
SD_GRID_HEAD_CARD = Card.
SD_GRID_HEAD_CARD_DESC = Minimum and Maximum # of times the the element can appear in the instance. Super-scripts indicate additional constraints on appearance
SD_GRID_HEAD_DESC = Constraints and Usage
SD_GRID_HEAD_DESC_DESC = Fixed values, length limits, vocabulary bindings and other usage notes
SD_GRID_HEAD_NAME = Name
SD_GRID_HEAD_NAME_DESC = The name of the element (Slice name in brackets).  Mouse-over provides definition
SD_GRID_HEAD_TYPE = Type
SD_GRID_HEAD_TYPE_DESC = Reference to the type of the element
SD_HEAD_CARD = Card.
SD_HEAD_CARD_DESC = Minimum and Maximum # of times the the element can appear in the instance
SD_HEAD_DESC = Description & Constraints
SD_HEAD_DESC_DESC = Additional information about the element
SD_HEAD_FLAGS_DESC = Information about the use of the element
SD_HEAD_NAME = Name
SD_HEAD_SC = The logical name of the elemHEAD_FLAGS = Flags
SD_HEAD_TYPE = Type
SD_HEAD_TYPE_DESC = Reference to the type of the element
SD_LEGEND = Legend for this format
SD_SUMMARY = Fixed Value: {0} {1}
SD_SUMMARY_MAPPINGS = Mappings for {0} ({2}{1}{3})
SD_SUMMARY_MISSING_EXTENSION = Unable to summarise extension {0} (no extension found)
SD_SUMMARY_MISSING_PROFILE = Unable to summarise profile {0} (no profile found)
SD_SUMMARY_PUBLICATION = This profile was published on {0} as a {1} by {2}
SD_SUMMARY_SLICES = This structure defines the following {0}Slices{1}
SD_SUMMARY_SLICE_NONE = There is a slice with no discriminator at {0}
SD_SUMMARY_SLICE_one = The element {0} is sliced based on the value of {1}
SD_SUMMARY_SLICE_other = The element {0} is sliced based on the values of {1}
SD_SUMMARY_MANDATORY = Mandatory: {0} {1}
SD_SUMMARY_MUST_SUPPORT = Must-Support: {0} {1}
SD_SUMMARY_FIXED = Fixed: {0} {1}
SD_SUMMARY_INFO = {0}, {1} by {2}
SD_SUMMARY_PROHIBITED = Prohibited: {0} {1}
SD_SUMMARY_NESTED_MANDATORY = ({0} nested mandatory {1})
TX_CODE = Code
TX_COMMENTS = Comments
TX_DEFINITION = Definition
TX_DEPRECATED = Deprecated
TX_DISPLAY = Display
TX_VERSION = Version
PAT_NO_GENDER = (no stated gender)
PAT_GENDER = Gender: {0}
PAT_NO_DOB = DoB Unknown
PAT_DOB = DoB: {0}
PAT_NO_NAME = Anonymous Patient
PAT_CONTAINED_one = Contained Resource
PAT_CONTAINED_other = Contained Resources
PAT_OTHER_ID_one = Other Id:
PAT_OTHER_ID_other = Other Ids:
PAT_OTHER_ID_HINT_one = Other Id (see the one above)
PAT_OTHER_ID_HINT_other = Other Ids (see the one above)
PAT_LANG_one = Language:
PAT_LANG_other = Languages:
PAT_LANG_HINT_one = Language spoken
PAT_LANG_HINT_other = Languages spoken
PAT_LANG_PREFERRED = (preferred)
PAT_GP = General Practitioner
PAT_MO = Managing Organization
PAT_LINKS = Links:
PAT_LINKS_HINT = Patient Links
PAT_LINK_REPLBY = This record replaced by
PAT_LINK_REPL = This record replaces
PAT_LINK_REFER = Please refer to
PAT_LINK_SEE = Also see
PAT_NOM_CONTACT = Nominated Contact:
PAT_NOK_CONTACT = Contact:
PAT_NOK_CONTACT_HINT = Patient contact
PAT_RELN = Relationships:
PAT_ORG = Organization:
PAT_PERIOD = Valid Period:
PAT_ALT_NAME = Alt. Name:
PAT_ALT_NAME_HINT = Alternate names (see the one above)
PAT_CONTACT = Contact Detail
PAT_CONTACT_HINT = Ways to contact the Patient
PAT_ACTIVE = Active:
PAT_ACTIVE_HINT = Record is active
PAT_DECEASED = Deceased:
PAT_DECEASED_HINT = Known status of Patient
PAT_MARITAL = Marital Status:
PAT_MARITAL_HINT = Known Marital status of Patient
PAT_MUL_BIRTH = Multiple Birth:
PAT_MUL_BIRTH_HINT = Known multipleBirth status of Patient
PAT_PHOTO = Patient Photo
SD_HEAD_NAME_DESC = The logical name of the element
SD_HEAD_FLAGS = Flags
SD_SLICING_INFO = {0}, {1} by {2}
BUNDLE_DOCUMENT_CONTENT = Additional Document Content
BUNDLE_HEADER_DOC_ENTRY_URD = {0}. {1} ({2}/{3})
BUNDLE_HEADER_DOC_ENTRY_U = {0}. {1}
BUNDLE_HEADER_DOC_ENTRY_RD = {0}. {2}/{3}
CAPABILITY_REST_CAPS = FHIR RESTful Capabilities
CAPABILITY_RES_PRO = Capabilities by Resource/Profile
CAPABILTY_SHALL_SUPP = SHALL Support the Following Implementation Guides
CAPABILITY_SUMM = Summary
CAPABILITY_SHOULD_SUPP = SHOULD Support the Following Implementation Guides
CAPABILITY_SUPP_FORM = Supported Formats:
CAPABILITY_SUPP = support
CAPABILITY_SUPP_PATCH_FORM = Supported Patch Formats:
CAPABILITY_SUMM_SYS_INT = Summary of System-wide Interactions
CAPABILITY_SUPP_THE = Supports the
CAPABILITY_INT = interaction.
CAPABILITY_SUPPS = Supports
CAPABILITY_SUMM_RES = The summary table lists the resources that are part of this configuration, and for each resource it lists:
CAPABILITY_REV_PROF = The relevant profiles (if any)
CAPABILITY_SEARCH_PAR = The required, recommended, and some optional search parameters (if any).
CAPABILITY_RES_ENB = The linked resources enabled for
CAPABILITY_TYP_PRES = ype are only present if at least one of the resources has support for them.
CAPABILITY_OTH_RES_ENB = The other resources enabled for
CAPABILITY_RES_OPER = The operations on the resource (if any)
CAPABILITY_RES_TYP = Resource Type
CAPABILITY_PROF = Profile
CAPABILITY_OP = Operations
CAPABILITY_ADD_SUPP_PROF = Additional supported profiles:
CAPABILITY_SUPP_PROF = Supported Profiles
CAPABILITY_PROF_MAP = Profile Mapping
CAPABILITY_CRIT = Criteria
CAPABILITY_CONF = Conformance
CAPABILITY_OPER = Operation
CAPABILITY_DOC = Documentation
CAPABILITY_PAR = Parameter
CAPABILITY_TYP = Type
CAPABILITY_PARS = Parameters
CAPABILITY_TYPS = Types
CAPABILITY_NOTE_CAP = Note to Implementers: FHIR Capabilities
CAPABILTY_ALLOW_CAP = Any FHIR capability may be 'allowed' by the system unless explicitly marked as \"SHALL NOT\". A few items are marked as MAY in the Implementation Guide to highlight their potential relevance to the use case.
CAPABILITY_INT_DESC = interaction described as follows:
ACTOR_DEF_REF = References:
ACTOR_DEF_CAP = Capabilities:
ACTOR_DEF_DER = Derived from:
ADD_BIND_ADD_BIND = Additional Bindings
ADD_BIND_PUR = Purpose
ADD_BIND_USE = Usage
ADD_BIND_ANY = Any
ADD_BIND_DOC = Documentation
CAPABILITY_IMP_VER = Implementation Guide Version: {0}
CAPABILITY_FHIR_VER = FHIR Version: {0}
CAPABILITY_PUB_ON = Published on: {0}
CAPABILITY_PUB_BY = Published by: {0}
CAPABILITY_REST_CONFIG = REST Configuration: {0}
CAPABILITY_RES_CONF = Resource Conformance: {0}
ACTOR_DEF_ACT = Actor: {0}
ACTOR_DEF_TYP = Type: {0}
ADD_BIND_ANY_REP = any repeat
BUNDLE_REV_EXCP = Exception generating narrative: {0}
BUNDLE_REV_INV_DOC = Invalid document - first entry is not a Composition
CODE_SYS_UNKN_MODE = Unknown CodeSystemContentMode mode
CODE_SYS_ADD_LANG = Additional Language Displays
CODE_SYS_UNDEF_HIER = in an undefined heirarchy
CODE_SYS_COPY = Copy
CODE_SYS_DISP_PROP = displays and properties
CODE_SYS_DISP = displays
CODE_SYS_PROP = properties
CODE_SYS_FEAT = features
CODE_SYS_CODE = Code
CONC_MAP_FROM = Mapping from 
CONC_MAP_NOT_SPEC = (not specified)
CONC_MAP_TO = to 
CONC_MAP_NO_PROD_USE = (not intended for production usage). 
CONC_MAP_PUB_ON = Published on {0}
CONC_MAP_GRP = Group {0}
CONC_MAP_CODE_SYS_UNSPEC = unspecified code system
CONC_MAP_SOURCE = Source Code
CONC_MAP_REL = Relationship
CONC_MAP_TRGT = Target Code
CONC_MAP_CMNT = Comment
CONC_MAP_CODE = Code
CONC_MAP_CODES = Codes
CONC_MAP_FRM = from
CONC_MAP_SRC_DET = Source Concept Details
CONC_MAP_TRGT_DET = Target Concept Details
CONC_MAP_PROP = Properties
DATA_REND_MKDWN_LNK = Unable to resolve markdown link
DATA_REND_UNRD_EX = WARNING: Unrenderable Modifier Extension!
DATA_REND_LOINC = LOINC
DATA_REND_SNOWMED = SNOWMED CT
DATA_REND_RXNORM = RxNorm
DATA_REND_ICD = ICD-9
DATA_REND_DICOM = DICOM
DATA_REND_UCUM = UCUM
DATA_REND_NOT_STAT = [not stated]
DATA_REND_UNKNWN = unknown
DATA_REND_NO_DISP = No display for {0}
DATA_REND_TO_DO = to do: {0}
DATA_REND_ERROR = Error: {0}
DATA_REND_BY = By
DATA_REND_USE = use:
DATA_REND_PERIOD = period:
DATA_REND_SOURCE = source
DATA_REND_PHONE = Phone: {0}
DATA_REND_FAX = Fax: {0}
DATA_REND_TYPE = Type
DATA_REND_NAME = Name
DATA_REND_CODE = Code
DATA_REND_TIMING = Timing
DATA_REND_COND = Condition
DATA_REND_SUB = Subject
DATA_REND_FILT = Filter
DATA_REND_VALUE = Value
DATA_REND_SEARCH = Search on: {0}
DATA_REND_VALUESET = In ValueSet
DATA_REND_THESE_CODES = One of these codes:
DATA_REND_LIMIT = Limit
DATA_REND_SORT = Sort
DATA_REND_GETCODE = Code: {0}
DATA_REND_EVENTS = Events: {0}
DATA_REND_STARTING = Starting {0}
DATA_REND_COUNT = Count {0}
DATA_REND_DURATION = Duration {0}
DATA_REND_ONCE = Once
DATA_REND_UNTIL = Until {0}
DATA_REND_MEALS = at meals
DATA_REND_ATLUNCH = at lunch
DATA_REND_ATBKFST = at breakfast
DATA_REND_ATDINR = at dinner
DATA_REND_BFMEALS = before meals
DATA_REND_BFLUNCH = before lunch
DATA_REND_BFBKFST = before breakfast
DATA_REND_BFDINR = before dinner
DATA_REND_BFSLEEP = before sleeping
DATA_REND_AFTRMEALS = after meals
DATA_REND_AFTRBKFST = after breakfast
DATA_REND_AFTRLUNCH = after lunch
DATA_REND_AFTRDINR = after dinner
DATA_REND_AFTRWKNG = after waking
DATA_REND_ORIGIN = Origin: {0}
DATA_REND_INT = Interval: {0}
DATA_REND_FACT = Factor: {0}
DATA_REND_LOWER = Lower: {0}
DATA_REND_UP = Upper: {0}
DATA_REND_DIM = Dimensions: {0}
DATA_REND_DATA = Data: {0}
DIAG_REP_REND_SUB = Subject
DIAG_REP_REND_WHEN = When For
DIAG_REP_REND_REP = Reported
DIAG_REP_REND_IDEN = Identifier: {0}
DIAG_REP_REND_REQ = Request: {0}
DIAG_REP_REND_REPDET = Report Details
DIAG_REP_REND_CODECON = Coded Conclusions :
DIAG_REP_REND_UNABLE = Unable to get Patient Details
DIAG_REP_REND_NOTDONE = Not done yet
DIAG_REP_REND_CODE = Code
DIAG_REP_REND_VALUE = Value
DIAG_REP_REND_REFRAN = Reference Range
DIAG_REP_REND_FLAG = Flags
DIAG_REP_REND_NOTE = Note
DIAG_REP_REND_NOTRES = This Observation could not be resolved
DIAG_REP_REND_OBS = Observation
DIAG_REP_REND_ERR = Error:
DIAG_REP_REND_FOR = for
DIAG_REP_REND_AGE = Age
EX_SCEN_UN = Unknown ExampleScenario Renderer Mode {0}
EX_SCEN_ERR_REN = Error rendering ExampleScenario {0}
EX_SCEN_TIME = ... time passes ...\n
EX_SCEN_NAME = Name
EX_SCEN_TYPE = Type
EX_SCEN_DESC = Description
EX_SCEN_CONT = Content
EX_SCEN_FVER = FHIR version
EX_SCEN_VER = version
EX_SCEN_CONTA = Contains:
EX_SCEN_PROC = Process: {0}
EX_SCEN_PRECON = Pre-conditions:
EX_SCEN_POSTCON = Post-conditions:
EX_SCEN_STEP = Step
EX_SCEN_IN = Initiator
EX_SCEN_REC = Receiver
EX_SCEN_REQ = Request
EX_SCEN_RES = Response
EX_SCEN_SEE = See subprocess
EX_SCEN_BEL = below
EX_SCEN_OTH = See other scenario
EX_SCEN_ALT = Alternative {0}
EX_SCEN_UN_ACT = Unable to find referenced actor {0}
EX_SCEN_UN_INST = Unable to find referenced instance {0}
IMP_GUIDE_URL = The official URL for this implementation guide is:
LIB_REND_PAR = Participants
LIB_REND_AUT = Author
LIB_REND_ED = Editor
LIB_REND_REV = Reviewer
LIB_REND_END = Endorser
LIB_REND_ART = Related Artifacts
LIB_REND_PARA = Parameters
LIB_REND_REQ = Data Requirements
LIB_REND_CONT = Contents
LIB_REND_NOCONT = No Content
LIB_REND_SHOW = Content not shown - (
LIB_REND_SIZE = , size = {0}
LIST_REND_DATE = Date: {0}
LIST_REND_MODE = Mode: {0}
LIST_REND_STAT = Status: {0}
LIST_REND_CODE = Code: {0}
LIST_REND_SUB = Subject:
LIST_REND_ENC = Encounter:
LIST_REND_SRC = Source:
LIST_REND_ORD = Order: {0}
LIST_REND_ITEM = Items
LIST_REND_DAT = Date
LIST_REND_FLAG = Flag
LIST_REND_DEL = Deleted
NAME_SYS_SUM = Summary
NAME_SYS_URL = Defining URL
NAME_SYS_VER = Version
NAME_SYS_NAME = Name
NAME_SYS_TITLE = Title
NAME_SYS_STAT = Status
NAME_SYS_DEF = Definition
NAME_SYS_PUB = Publisher
NAME_SYS_OID = OID
NAME_SYS_FOROID = for OID based terminology systems
NAME_SYS_COPY = Copyright
NAME_SYS_IDEN = Identifiers
NAME_SYS_TYPE = Type
NAME_SYS_VALUE = Value
NAME_SYS_PREF = Preferred
NAME_SYS_PER = Period
NAME_SYS_COM = Comment
OBLIG_OBLIG = Obligations
OBLIG_ACT = Actor
OBLIG_ELE = Elements
OBLIG_USE = Usage
OBLIG_DOC = Documentation
OBLIG_FILT = Filter
OP_DEF_OFFIC = The official URL for this operation definition is:
OP_DEF_URLS = URL: [base]/${0}
OP_DEF_URL = URL: [base]/{0}
OP_DEF_INPAR = Input parameters Profile:
OP_DEF_OUTPAR = Output parameters Profile:
OP_DEF_PAR = Parameters
OP_DEF_USE = Use
OP_DEF_NAME = Name
OP_DEF_SCO = Scope
OP_DEF_CARD = Cardinality
OP_DEF_TYPE = Type
OP_DEF_BIND = Binding
OP_DEF_DOC = Documentation
OP_OUT_OK = All OK
OP_OUT_SEV = Severity
OP_OUT_LOC = Location
OP_OUT_CODE = Code
OP_OUT_DET = Details
OP_OUT_DIAG = Diagnostics
OP_OUT_SRC = Source
OP_OUT_TODO = todo
OP_OUT_NOT = Not done yet
PAR_REND_PAR = Parameters
PROF_DRIV_FEXCP = Cannot find definition for {0}
PROF_DRIV_EXCP = Exception Generating Narrative: {0}
PROV_PROV = Provenance for
PROV_PROVE = Provenance for:
PROV_SUM = Summary
PROV_OCC = Occurrence
PROV_REC = Recorded
PROV_POL = Policy
PROV_LOC = Location
PROV_ACT = Activity
PROV_AGE = Agents
PROV_TYPE = Type
PROV_ROLE = Role
PROV_WHO = who
PROV_BEHALF = On Behalf Of
PROV_FOR = Provenance for {0}
PROV_NOT = Not done yet
QUEST_STRUCT = Structure
QUEST_LINKID = LinkID
QUEST_LINK = The linkID for the item
QUEST_TEXT = Text
QUEST_TEXTFOR = Text for the item
QUEST_CARD = Cardinality
QUEST_TIMES = Minimum and Maximum # of times the item can appear in the instance
QUEST_TYPE = Type
QUEST_TYPE_ITEM = The type of the item
QUEST_FLAG = Flags
QUEST_ATTRIBUTES = Other attributes of the item
QUEST_DESC = Description & Constraints
QUEST_ADD_INFO = Additional information about the item
QUEST_OPT = Options Sets
QUEST_ANSW = Answer options for {0}
QUEST_ROOT = QuestionnaireRoot
QUEST_QUEST = Questionnaire
QUEST_READONLY = Is Read Only
QUEST_SUBJECT = Can change the subject of the questionnaire
QUEST_DISPLAY = Is optional to display
QUEST_LINKED = Is linked to an observation
QUEST_HIDDEN = Is a hidden item
QUEST_ORIENTATION = Orientation: {0}
QUEST_CAT = Category: {0}
QUEST_MAX = Max Length:
QUEST_DEF = Definition:
QUEST_ENABLE = Enable When:
QUEST_VALUE = Value Set:
QUEST_OPTIONS = Options:
QUEST_INITIAL = Initial Value:
QUEST_EXP = Expressions:
QUEST_INT = Initial Values
QUEST_CONT = Context
QUEST_ITEM_CONT = Item Context
QUEST_EN = Enable When
QUEST_CALC = Calculated Value
QUEST_CAND = Candidates
QUEST_TODO = todo
QUEST_MAND = Mandatory
QUEST_ANSWERS = Answers
QUEST_QUESTIONNAIRE = Questionnaire {0}
QUEST_TRY = Try this questionnaire out:
QUEST_NLM = NLM Forms Library
QUEST_URL = URL
QUEST_VERSION = Version
QUEST_NAME = Name
QUEST_TITLE = Title
QUEST_DERIVED = Derived From
QUEST_STATUS = Status
QUEST_EXPER = Experimental
QUEST_PUB = Publication Date
QUEST_APP = Approval Date
QUEST_REV_DATE = Last Review Date
QUEST_EFF_PERIOD = Effective Period
QUEST_SUB_TYPE = Subject Type
QUEST_DESCRIPTION = Description
QUEST_PURPOSE = Purpose
QUEST_COPYRIGHT = Copyright
QUEST_ID = Link Id
QUEST_PREFIX = Prefix
QUEST_REQ = Required
QUEST_REP = Repeats
QUEST_READ_ONLY = Read Only
QUEST_SUB = Subject
QUEST_VALUE_SET = Value Set
QUEST_MAX_LENGTH = Max Length
QUEST_ALLOWED = Allowed Answers
QUEST_INITIALLY = (initially selected)
QUEST_INITIAL_ANSWER = Initial Answer
QUEST_HIDDEN_ITEM = Hidden Item
QUEST_DEFINITION = Definition
QUEST_CODE = Code
QUEST_OBSERVATION = Observation Link Period
QUEST_TRUE = are true:
QUEST_ARE_TRUE = ?? are true:
REND_STANDARDS = Standards Status = {0}
REND_SINCE = This content has been added since {0}
REND_ADDED = Added:
REND_CHANGED = Changed:
REND_REMOVED = Removed:
REND_ROW_SINCE = This row of content has been added since {0}
REQ_ACTOR = These requirements apply to the actor
REQ_FOLLOWING_ACTOR = These requirements apply to the following actors:
REQ_DERIVE = These requirements derive from
REQ_FOLLOWING_REQ = These requirements are derived from the following requirements:
REQ_REFERENCES = References:
REQ_LINKS = Links:
REQ_DERIVED = Derived From:
REQ_SATISFIED = Satisfied By:
REQ_SOURCES = Source:
RES_REND_COND_REF = Conditional Reference:
RES_REND_SEE_ON_THIS_PAGE = See on this page:
RES_REND_DESC = . Description: (todo)
RES_REND_GEN_SUM = . Generated Summary:
RES_REND_TODO = todo
RES_REND_EXP = Experimental
RES_REND_ACT = Active
RES_REND_DRAFT = draft
RES_REND_RET = retired
RES_REND_UNKNOWN = Unknown
RES_REND_RESOURCE = Resource
RES_REND_PROF = Profile
RES_REND_TAG = Tag
RES_REND_SECURITY = Security Label
RES_REND_ERROR = Error rendering: {0}
SEARCH_PAR_PAR = Parameter
SEARCH_PAR_EXP = Expression
SEARCH_PAR_NONE = (none)
SEARCH_PAR_PROC = Processing Mode
SEARCH_PAR_RES = All Resources
SEARCH_PAR_MULTIPLES = Multiples
SEARCH_PAR_MULTIPLE_AND_SERVER = multipleAnd: It's up to the server whether the parameter may repeat in order to specify multiple values that must all be true
SEARCH_PAR_MULTIPLE_AND_REPEAT = multipleAnd: The parameter may repeat in order to specify multiple values that must all be true
SEARCH_PAR_MULTIPLE_AND_APPEAR = multipleAnd: The parameter may only appear once
SEARCH_PAR_MULTIPLE_OR_SERVER = multipleOr: It's up to the server whether the parameter can have multiple values (separated by comma) where at least one must be true
SEARCH_PAR_MULTIPLE_OR_MULTIPLE = multipleOr: The parameter may have multiple values (separated by comma) where at least one must be true
SEARCH_PAR_MULTIPLE_OR_ONE = multipleOr: The parameter may only have one value (no comma separators)
SEARCH_PAR_COMP = Comparators
SEARCH_PAR_ALLOWED = Allowed:
SEARCH_PAR_MOD = Modifiers
SEARCH_PAR_CHAIN = Chains
SUB_TOPIC_RES_TRIG = Resource Triggers
SUB_TOPIC_RES = Resource
SUB_TOPIC_INT = Interactions
SUB_TOPIC_PREV = * previous = {0}
SUB_TOPIC_CREATE = * create result = {0}
SUB_TOPIC_DELETE = * delete result = {0}
SUB_TOPIC_REQ = * require both = {0}
SUB_TOPIC_CRITERIA = Criteria
SUB_TOPIC_FHIR_PATH = FHIR Path
SUB_TOPIC_DESC = Description
SUB_TOPIC_EVENT = Event
SUB_TOPIC_FILT_PAR = Filter Parameter
SUB_TOPIC_FILT_DEF = Filter Definition
SUB_TOPIC_COMP = Comparators
SUB_TOPIC_MOD = Modifiers
SUB_TOPIC_INCL = Includes
SUB_TOPIC_REV_INCL = Reverse Includes
TERMINOLOGY_LVL = Lvl
TERMINOLOGY_SNOMED = SNOMED-CT
TEST_PLAN_CONT = Contact:
TEST_PLAN_CATEGORY = Category:
TEST_PLAN_SCOPE = Test Plant Scope:
TEST_PLAN_SCOPES = Test Plant Scopes:
TEST_PLAN_DEP = Test Plant Dependency:
TEST_PLAN_DEPEN = Test Plant Dependencies:
TEST_PLAN_DESC = Dependency - no description
TEST_PLAN_RUN = Test Run
TEST_PLAN_TEST_RUN = Test Run {0}
TEST_PLAN_DATA = Test Data
TEST_PLAN_TEST_DATA = Test Data {0}
TEST_PLAN_ASS = Assertion
TEST_PLAN_ASSERTION = Assertion {0}
TEST_PLAN_LANG = Language
TEST_PLAN_SOURCE = Source[x]
TEST_PLAN_TYPE = Type
TEST_PLAN_CONTENT = Content
TEST_PLAN_RESULT = Result
VALUE_SET_CONT = Value Set Contents
VALUE_SET_INF = This value set cannot be expanded because of the way it is defined - it has an infinite number of members.
VALUE_SET_SEL = This value set has >1000 codes in it. In order to keep the publication size manageable, only a selection (1000 codes) of the whole set of codes is shown
VALUE_SET_LEVEL = Level
VALUE_SET_CODE = Code
VALUE_SET_SYSTEM = System
VALUE_SET_DISPLAY = Display
VALUE_SET_INACTIVE = Inactive
VALUE_SET_DEF = Definition
VALUE_SET_ADD_LANG = Additional Language Displays
VALUE_SET_DESIG = Additional Designations
VALUE_SET_ADD_DESIG = Additional Designations and Language Displays
VALUE_SET_EXP = Expansion based on example code system
VALUE_SET_EXP_FRAG = Expansion based on code system fragment
VALUE_SET_EXPANSION = Expansion based on
VALUE_SET_EXPANSIONS = Expansion based on:
VALUE_SET_INT = International
VALUE_SET_US = United States
VALUE_SET_AUS = Australian
VALUE_SET_SPAN = Spanish
VALUE_SET_DANISH = Danish
VALUE_SET_DUTCH = Dutch
VALUE_SET_SWEDISH = Swedish
VALUE_SET_UK = United Kingdom
VALUE_SET_INACT = inactive
VALUE_SET_RULES_INC = This value set includes codes based on the following rules:
VALUE_SET_RULES_EXC = This value set excludes codes based on the following rules:
VALUE_SET_INC = Include
VALUE_SET_EXC = exclude
VALUE_SET_EXCL = Exclude
VALUE_SET_NOT_DEF = This include specifies a heirarchy for when value sets are generated for use in a User Interface, but the rules are not properly defined
VALUE_SET_ALL_CODE = This include specifies a heirarchy for when value sets are generated for use in a User Interface. The expansion contains all the codes, and also this structure:
VALUE_SET_NOT_FOUND = This include specifies a heirarchy for when value sets are generated for use in a User Interface. The expansion contains this structure, and any codes not found in the structure:
VALUE_SET_CONT_STRUC = This include specifies a heirarchy for when value sets are generated for use in a User Interface. The expansion contains this structure:
VALUE_SET_CODE_ITEM = The code for the item
VALUE_SET_DISPLAY_ITEM = The display for the item
VALUE_SET_SPEC_NAME = Fully specified name
VALUE_SET_SYNONYM = Synonym
VALUE_SET_COMMA = ,
VALUE_SET_WHERE_CODES = , where the codes are contained in
VALUE_SET_IMPORT = Import all the codes that are contained in
VALUE_SET_NOTE = Note: {0}
VALUE_SET_ERROR = Error Expanding ValueSet: {0}
VALUE_SET_NULL = null
VALUE_SET_EQUAL = =
VALUE_SET_ISA = is-a
VALUE_SET_ISNOTA = is-not-a
VALUE_SET_REGEX = matches (by regex)
VALUE_SET_NULLS = ?ngen-13?
VALUE_SET_IN = in
VALUE_SET_NOTIN = not in
VALUE_SET_DESCENDENTOF = descends from
VALUE_SET_EXISTS = exists
VALUE_SET_GENERALIZES = generalizes
STRUC_DEF_FII = Formal Invariant Identifier
STRUC_DEF_ERROR = Unknown structure mode
STRUC_DEF_REQ = Required
STRUC_DEF_CONC_SET = Concepts must come from this value set
STRUC_DEF_EXT = Extensible
STRUC_DEF_APPROP_CON = Concepts must come from this value set if appropriate concept is in this value set
STRUC_DEF_MAX = Maximum
STRUC_DEF_REQ_BIND = A required binding for additional codes, for us when the binding strength is 'extensible' or 'preferred'
STRUC_DEF_MIN = Minimum
STRUC_DEF_MIN_ALLOW = The minimum allowable value set - any conformant system SHALL support all these codes
STRUC_DEF_CAND = Candidate
STRUC_DEF_CAND_SUB = This value set is a candidate to substitute for the overall conformance value set in some situations; usually these are defined in the documentation
STRUC_DEF_CURR = Current
STRUC_DEF_CURR_RULE = New records are required to use this value set, but legacy records may use other codes. The definition of 'new record' is difficult, since systems often create new records based on pre-existing data. Usually 'current' bindings are mandated by an external authority that makes clear rules around this
STRUC_DEF_PREF = Preferred
STRUC_DEF_PREF_CONT = This is the value set that is preferred in a given context (documentation should explain why)
STRUC_DEF_UI = UI
STRUC_DEF_UI_CONT = This value set is provided for user look up in a given context. Typically, these valuesets only include a subset of codes relevant for input in a context
STRUC_DEF_START = Starter
STRUC_DEF_START_DEF = This value set is a good set of codes to start with when designing your system
STRUC_DEF_COMP = Component
STRUC_DEF_COMP_DOC = This value set is a component of the base value set. Usually this is called out so that documentation can be written about a portion of the value set
STRUC_DEF_EX = Example
STRUC_DEF_EX_DESC = Instances are not expected or even encouraged to draw from the specified value set. The value set merely provides examples of the types of concepts intended to be included.
STRUC_DEF_EXAM = example
STRUC_DEF_EXTENSIBLE = extensible
STRUC_DEF_PREFERRED = preferred
STRUC_DEF_REQUIRED = required
STRUC_DEF_ALL_ACTORS = All Actors
STRUC_DEF_OBLIG_ALL = Obligations that apply to all actors
STRUC_DEF_UNDEF_ACT = Obligations that apply to the undefined actor {0}
STRUC_DEF_ACT = Obligations that apply to the actor {0}
STRUC_DEF_NAME = Name
STRUC_DEF_LOGIC_NAME = The logical name of the element
STRUC_DEF_CONT_RULE = Content/Rules for all slices
STRUC_DEF_ALL_TYPES = All Types
STRUC_DEF_CONT_TYPE = Content/Rules for all Types
STRUC_DEF_SLICE = Slice
STRUC_DEF_SLICE_PAR = Slice {0}
STRUC_DEF_SLICE_FOR = Slices for {0}
STRUC_DEF_MOD = This element is a modifier element
STRUC_DEF_OBLIG_SUPP = This element has obligations and must be supported
STRUC_DEF_SUPP = This element must be supported
STRUC_DEF_OBLIG = This element has obligations
STRUC_DEF_SUMM = This element is included in summaries
STRUC_DEF_ELE = This primitive element must have a value
STRUC_DEF_EX_URL = Extension URL = {0}
STRUC_DEF_COMPLEX = Complex
STRUC_DEF_JSON_IS = This element is present as a JSON Array even when there are no items in the instance
STRUC_DEF_JSON_MAY = This element may be present as a JSON Array even when there are no items in the instance
STRUC_DEF_CHOICE = (Choice of one)
STRUC_DEF_XML_NAME = XML Namespace
STRUC_DEF_ELEMENTS = Elements defined in Ancestors:
STRUC_DEF_URL = URL
STRUC_DEF_PROFILED = profiled by
STRUC_DEF_BINDING = Binding
STRUC_DEF_TYPE_SET = This type can be bound to a value set using the "
STRUC_DEF_BINDING_STYLE = binding style
STRUC_DEF_ELE_READ = When this element is read
STRUC_DEF_PREFIXED = is prefixed to the value before validation
STRUC_DEF_EXT_JSON = This element can be extended by named JSON elements
STRUC_DEF_DATE = Date Format: {0}
STRUC_DEF_ID_IS = Id may or not be present (this is the default for elements but not resources)
STRUC_DEF_ID_MAY = Id is required to be present (this is the default for resources but not elements)
STRUC_DEF_ID_NOT_ALLOW = An id is not allowed in this context
STRUC_DEF_CHOICE_GRP = Choice Group
STRUC_DEF_REPEAT = This is a repeating choice group that does not appear directly in the instance
STRUC_DEF_XML = XML
STRUC_DEF_XML_ELE = XML Element Name
STRUC_DEF_JSON_NAME = JSON Property Name
STRUC_DEF_JSON_TYPE = JSON Property Name for Type
STRUC_DEF_JSON_INFERRED = JSON: The type of this element is inferred from the JSON type in the instance
STRUC_DEF_JSON_NULL = JSON: This object can be represented as null in the JSON structure (which counts as 'present' for cardinality purposes)
STRUC_DEF_JSON_ARRAY = JSON: This element may be present as a JSON Array even when there are no items in the instance
STRUC_DEF_JSON_IF = JSON: If
STRUC_DEF_THEN_TYPE = then the type is
STRUC_DEF_OBLIG_ADD = This is an obligation profile that only contains obligations and additional bindings
STRUC_DEF_NOT_MARK = Instances of this logical model are not marked to be the target of a Reference
STRUC_DEF_REF = Instances of this logical model can be the target of a Reference
STRUC_DEF_TEMPLATEID = Instance of this type are validated by templateId
STRUC_DEF_VALID_UNKNOWN = Instances of this type are validated using an unknown approach: {0}
STRUC_DEF_LOGIC = Logical Container
STRUC_DEF_ROOT = The root class that contains instances of this class
STRUC_DEF_REPEAT_ELE = This repeating element order: {0}
STRUC_DEF_FIXED = Fixed Value
STRUC_DEF_AS_SHOWN = As shown
STRUC_DEF_REQ_PATT = Required Pattern
STRUC_DEF_LEAST_FOLLOW = At least the following
STRUC_DEF_EXAMPLE = Example
STRUC_DEF_UNKNOWN_REF = Unknown reference to {0}
STRUC_DEF_SEE = See
STRUC_DEF_TYPE_SUPP = This type must be supported
STRUC_DEF_PROF_SUPP = This profile must be supported
STRUC_DEF_TODO = todo
STRUC_DEF_FIXED_VALUE = Fixed Value:
STRUC_DEF_COMPLEXBRACK = (complex)
STRUC_DEF_URLS = URL:
STRUC_DEF_SLICES = Slice:
STRUC_DEF_BINDINGS = Binding:
STRUC_DEF_REQUIRED_PATT = Required Pattern:
STRUC_DEF_MAX_LENGTH = Max Length:
STRUC_DEF_DEF = Definition:
STRUC_DEF_COMMENT = Comments:
STRUC_DEF_TARG_SUPP = This target must be supported
STRUC_DEF_ORDERED = Ordered
STRUC_DEF_UNORDERED = Unordered
STRUC_DEF_UNSPECIFIED = Unspecified
STRUC_DEF_CLOSED = Closed
STRUC_DEF_OPEN = Open
STRUC_DEF_OPEN_END = Open At End
STRUC_DEF_FHIR = Base FHIR {0}
STRUC_DEF_CAP = CAP Code
STRUC_DEF_PROPERTY = Property
STRUC_DEF_CARD = Card.
STRUC_DEF_CONTENT = Content
STRUC_DEF_DESC = Description
STRUC_DEF_PROF_RES = A profiled resource
STRUC_DEF_MAX_MIN = Minimum and Maximum # of times the element can appear in the instance
STRUC_DEF_WHAT = What goes here
STRUC_DEF_DESC_PROF = Description of the profile
STRUC_DEF_IF = If
STRUC_DEF_FHIR_EXCEP = Unable to retrieve StructureDefinition with URL {0}
STRUC_DEF_SLICE_NAME = Slice Name
STRUC_DEF_CONSTRAINING = Slice Constraining
STRUC_DEF_DEFINITION = Definition
STRUC_DEF_SHORT = Short
STRUC_DEF_COMMENTS = Comments
STRUC_DEF_NOTE = [x] Note
STRUC_DEF_CONTROL = Control
STRUC_DEF_TYPE = Type
STRUC_DEF_DEFAULT_TYPE = Default Type
STRUC_DEF_MODIFIER = Is Modifier
STRUC_DEF_PRIMITIVE = Primitive Value
STRUC_DEF_ALLOWED = Allowed Units
STRUC_DEF_MUST_SUPPORT = Must Support
STRUC_DEF_MUST_SUPPORT_TYPES = Must Support Types
STRUC_DEF_LOGICAL = Logical Model
STRUC_DEF_LOGICAL_CONT = Logical Container
STRUC_DEF_VALID = Validation
STRUC_DEF_UNKNOWN_APPROACH = Instances of this type are validated using an unknown approach: {0}
STRUC_DEF_IMPOSE_PROFILE = Impose Profile
STRUC_DEF_COMP_PROF = Complies with Profile
STRUC_DEF_PROF_COMP = This profiles compiles with the profile
STRUC_DEF_OBLIGATIONS = Obligations
STRUC_DEF_EXT_STYLE = Extension Style
STRUC_DEF_DATE_FORM = Date Format
STRUC_DEF_BIND_STYLE = Binding Style
STRUC_DEF_ID_EXPECT = ID Expectation
STRUC_DEF_ID_REQ = Id is required to be present (this is the default for resources but not elements)
STRUC_DEF_REP_CHOICE = This is a repeating choice group that does not appear directly in the instance
STRUC_DEF_JSON_FORM = JSON Format
STRUC_DEF_XML_FORM = XML Format
STRUC_DEF_STRING_FORM = String Format
STRUC_DEF_STAND_STAT = Standard Status
STRUC_DEF_REQUIREMENTS = Requirements
STRUC_DEF_LABEL = Label
STRUC_DEF_ALT_NAME = Alternate Names
STRUC_DEF_DEF_CODES = Definitional Codes
STRUC_DEF_MIN_VALUE = Min Value
STRUC_DEF_MAX_VALUE = Max Value
STRUC_DEF_VALUE_REQ = Value Required
STRUC_DEF_VALUE_ALT = Value Alternatives
STRUC_DEF_DEFAULT_VALUE = Default Value
STRUC_DEF_MEAN_MISS = Meaning if Missing
STRUC_DEF_PATT_VALUE = Pattern Value
STRUC_DEF_INVAR = Invariants
STRUC_DEF_LOINC = LOINC Code
STRUC_DEF_SNOMED = SNOMED-CT Code
STRUC_DEF_BECAUSE = because
STRUC_DEF_NO_MUST_SUPPORT = No must-support rules about the choice of types/profiles
STRUC_DEF_NOT_MARKED = Instances of this logical model are not marked to be the target of a Reference
STRUC_DEF_CAN_TARGET = Instances of this logical model can be the target of a Reference
STRUC_DEF_CANNOT_TARGET = Instances of this logical model cannot be the target of a Reference
STRUC_DEF_JSON_ELE = This element can be extended by named JSON elements
STRUC_DEF_TYPE_BOUND = This type can be bound to a value set using the {0}
STRUC_DEF_SUMMARY = Summary
STRUC_DEF_CDA = This property is represented as CDA Text in the XML.
STRUC_DEF_XSI = The type of this property is determined using the "
STRUC_DEF_XHTML = This property is represented as XHTML Text in the XML.
STRUC_DEF_XML_ATTRIBUTE = In the XML format, this property is represented as an attribute.
STRUC_DEF_UNADORNED = In the XML format, this property is represented as unadorned text.
STRUC_DEF_NAMESPACE = In the XML format, this property has the namespace 
STRUC_DEF_XML_ACTUAL = In the XML format, this property has the actual name
STRUC_DEF_JSON_PRESENT = The JSON Array for this property is present even when there are no items in the instance (e.g. as an empty array)
STRUC_DEF_JSON_NOT_PRESENT = The JSON Array for this property is not present when there are no items in the instance (e.g. never as an empty array)
STRUC_DEF_JSON_MAY_PRESENT = The JSON Array for this property may be present even when there are no items in the instance (e.g. may be present as an empty array)
STRUC_DEF_JSON_PROPERTY_NAME = This property appears in JSON with the property name 
STRUC_DEF_JSON_CAN_NAME = This type can appear in JSON with the property name
STRUC_DEF_JSON_SINGLE = This repeating object is represented as a single JSON object with named properties. The name of the property (key) is the value of the
STRUC_DEF_NULL_JSON = This object can be represented as null in the JSON structure (which counts as 'present' for cardinality purposes)
STRUC_DEF_INFERRED_JSON = The type of this element is inferred from the JSON type in the instance
STRUC_DEF_OBLIG_FROM = This profile picks up obligations and additional bindings from 
STRUC_DEF_JSON_EXT = (in elements using named extensions)
STRUC_DEF_JSON_CHILD = child
STRUC_DEF_VALUE = Value Set
STRUC_DEF_ONE_OF = One of:
STRUC_DEF_AND = and
STRUC_DEF_SET_SLICES = This element introduces a set of slices on
STRUC_DEF_SET_ARE = . The slices are
STRUC_DEF_DESCRIM = , and can be differentiated using the following discriminators:
STRUC_DEF_NO_DESCRIM = , and defines no disciminators to differentiate the slices
STRUC_DEF_BUSINESS_ID = This is a business identifier, not a resource identifier (see
STRUC_DEF_DISCUSSION = discussion
STRUC_DEF_BUSINESS_VERID = This is a business version Id, not a resource version Id (see
STRUC_DEF_INVARIANT = This element is affected by the following invariants:
STRUC_DEF_CHOICE_OF = Choice of:
STRUC_DEF_COMP_EX = (Complex Extension)
STRUC_DEF_EX_TYPE = (Extension Type:
STRUC_DEF_COPY_URL = Click to Copy URL
STRUC_DEF_FOR_CODE = For codes, see
STRUC_DEF_EX_CODE = For example codes, see
STRUC_DEF_SHOULD_CODE = The codes SHOULD be taken from
STRUC_DEF_SUIT_SHALL_CODE = Unless not suitable, these codes SHALL be taken from
STRUC_DEF_SHALL_CODE = The codes SHALL be taken from
STRUC_DEF_ERR_DESC = Error describing concept- not done yet (no codings, no text)
STRUC_DEF_LOINC_CODE = LOINC code
STRUC_DEF_SNOMED_CODE = SNOMED CT code
STRUC_DEF_UCUM = UCUM
STRUC_DEF_PREFIX_VALID = is prefixed to the value before validation
STRUC_DEF_PROF_REQ = This profile also requires that the instance also conform this additional profile:
ADD_BIND_ANY_REPS = Any repeats
ADD_BIND_ALL_REP = All repeats
ADD_BIND_MAX = Max Binding
ADD_BIND_MIN = Min Binding
ADD_BIND_REQ_BIND = Required Binding
ADD_BIND_EX_BIND = Extensible Binding
ADD_BIND_CURR_BIND = Current Binding
ADD_BIND_PREF_BIND = Preferred Binding
ADD_BIND_EXT_PREF = A required binding, for use when the binding strength is 'extensible' or 'preferred'
ADD_BIND_MIN_ALLOW = The minimum allowable value set - any conformant system SHALL support all these codes
ADD_BIND_VALID_REQ = Validators will check this binding (strength = required)
ADD_BIND_VALID_EXT = Validators will check this binding (strength = extensible)
ADD_BIND_NEW_REC = New records are required to use this value set, but legacy records may use other codes
ADD_BIND_RECOM_VALUE_SET = This is the value set that is recommended (documentation should explain why)
ADD_BIND_RECOMMENDED = Recommended
ADD_BIND_REQUIRED = Required
ADD_BIND_GIVEN_CONT = This value set is provided to user look up in a given context
ADD_BIND_UI_BIND = UI Binding
ADD_BIND_UI = UI
ADD_BIND_DESIG_SYS = This value set is a good set of codes to start with when designing your system
ADD_BIND_STARTER = Starter
ADD_BIND_UNKNOWN_PUR = Unknown code for purpose
ADD_BIND_COMPONENT = Component
ADD_BIND_VALUE_COMP = This value set is a component of the base value set
BIND_REND_NO_CONTENT = No Content Type
BUND_REND_INVALID_DOC = Invalid document ''{0}'' - first entry is not a Composition ({0})
BUND_REND_RES = resource
BUND_REND_GEN_NARR = generating narrative
CAPABILITY_CORS_YES = Enable CORS: yes
CAPABILITY_CORS_NO = Enable CORS: no
CAPABILITY_INTER_SUPP = The interactions supported by each resource (
CAPABILITY_READ_INT = GET a resource (read interaction)
CAPABILITY_VREAD_INT = GET past versions of resources (vread interaction)
CAPABILITY_SEARCH_INT = GET all set of resources of the type (search interaction)
CAPABILITY_UPDATE_INT = PUT a new resource version (update interaction)
CAPABILITY_PATCH_INT = PATCH a new resource version (patch interaction)
CAPABILITY_CREATE_INT = POST a new resource (create interaction)
CAPABILITY_DELETE_INT = DELETE a resource (delete interaction)
CAPABILITY_HISTORY_INT = GET changes to a resource (history interaction on instance)
CAPABILITY_HISTORY_TYPE = GET changes for all resources of the type (history interaction on type)
CAPABILITY_SEARCHES = Searches
CAPABILITY_REQ_RECOM = Required and recommended search parameters
CAPABILITY_BASE_SYS = Base System Profile
CAPABILITY_PROF_CONF = Profile Conformance
CAPABILITY_FHIR = Core FHIR Resource
CAPABILITY_REF_PROF = Reference Policy
CAPABILITY_SUPP_PROFS = Supported Profiles
CAPABILITY_EXT_OP = Extended Operations
CAPABILITY_INT_SUMM = Interaction summary
CAPABILITY_SEARCH_PARS = Search Parameters
CAPABILITY_COMB_SEARCH_PARS = Combined Search Parameters
CODE_SYS_IN_A_HIERARCHY = in a {0} hierarchy
